// <auto-generated />
using System;
using FindServiceHn.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FindServiceHn.Database.Migrations
{
    [DbContext(typeof(FindServiceHnContext))]
    [Migration("20220917080000_updating municipality")]
    partial class updatingmunicipality
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FindServiceHn.Database.Models.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUserCreation")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Countries", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUserCreation")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCountry");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.CustomerAddress", b =>
                {
                    b.Property<int>("IdCustomerAddress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdDepartment")
                        .HasColumnType("int");

                    b.Property<int>("IdMunicipality")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("idStatus")
                        .HasColumnType("int");

                    b.HasKey("IdCustomerAddress");

                    b.ToTable("CustomerAddresses");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Customers", b =>
                {
                    b.Property<int>("IdCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCustomerAddress")
                        .HasColumnType("int");

                    b.Property<int>("Identificationcard")
                        .HasColumnType("int");

                    b.Property<string>("KeyValidation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MainProfile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Rtn")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("emailpassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCustomer");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.DayHour", b =>
                {
                    b.Property<int>("IdHour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdHour");

                    b.ToTable("DayHours");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Departments", b =>
                {
                    b.Property<int>("IdDepartment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int>("IdUserCreation")
                        .HasColumnType("int");

                    b.HasKey("IdDepartment");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Municipalities", b =>
                {
                    b.Property<int>("IdMunicipality")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int>("IdDepartment")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdUserCreation")
                        .HasColumnType("int");

                    b.HasKey("IdMunicipality");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.OrderDetail", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("IdOrder");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.OrderHeader", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerObservation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdClientAddress")
                        .HasColumnType("int");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdSubCategory")
                        .HasColumnType("int");

                    b.Property<int>("SatisfactionLevel")
                        .HasColumnType("int");

                    b.HasKey("IdOrder");

                    b.ToTable("OrderHeaders");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.OrderSatisfaction", b =>
                {
                    b.Property<int>("IdSatisfaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Valorization")
                        .HasColumnType("int");

                    b.HasKey("IdSatisfaction");

                    b.ToTable("Ordersatisfactions");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.OrderStatus", b =>
                {
                    b.Property<int>("IdStatusOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.HasKey("IdStatusOrder");

                    b.ToTable("Orderstatus");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("ShippingStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Provider", b =>
                {
                    b.Property<int>("IdProvider")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AtentionFirst")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AtentionLast")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdSubcategory")
                        .HasColumnType("int");

                    b.Property<int>("IdentificationCard")
                        .HasColumnType("int");

                    b.Property<string>("IndDelivery")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IndusCai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("KeyValidation")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProfilePrincipal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("QtyWorks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RTN")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdProvider");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.ProviderEval", b =>
                {
                    b.Property<int>("IdEval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("Idcategory")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.HasKey("IdEval");

                    b.ToTable("ProviderEvals");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.ProviderPlanJob", b =>
                {
                    b.Property<int>("IdQtyWorks")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdQtyWorks");

                    b.ToTable("ProviderPlanJobs");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.ProvidersAttention", b =>
                {
                    b.Property<int>("IdProviderAttention")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<string>("TypeAttention")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdProviderAttention");

                    b.ToTable("ProvidersAttentions");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.ProviderService", b =>
                {
                    b.Property<int>("IdProviderService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdServiceType")
                        .HasColumnType("int");

                    b.Property<string>("IdStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Shipping")
                        .HasColumnType("int");

                    b.Property<string>("TypeService")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdProviderService");

                    b.ToTable("ProviderServices");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.QuotesDetail", b =>
                {
                    b.Property<int>("IdQuoteDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("IStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("IdQuoteDetail");

                    b.ToTable("QuotesDetails");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.QuotesHeader", b =>
                {
                    b.Property<int>("IdQuoteHeader")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AssigmentDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerObservation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdClientAddres")
                        .HasColumnType("int");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<int>("IdQuoteDetail")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusCreationDate")
                        .HasColumnType("int");

                    b.Property<int>("IdSubcategory")
                        .HasColumnType("int");

                    b.Property<string>("ProviderObservation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdQuoteHeader");

                    b.ToTable("QuotesHeaders");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.ServicesStatus", b =>
                {
                    b.Property<int>("IdServicesStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdServicesStatus");

                    b.ToTable("ServicesStatuss");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.SubCategory", b =>
                {
                    b.Property<int>("IdSubCategories")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<int>("IdUserCreation")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdSubCategories");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
