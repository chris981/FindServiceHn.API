// <auto-generated />
using System;
using FindServiceHn.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FindServiceHn.Database.Migrations
{
    [DbContext(typeof(FindServiceHnContext))]
    [Migration("20220819031906_newTables")]
    partial class newTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FindServiceHn.Database.Models.Category", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Order_detail", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("IdOrder");

                    b.ToTable("Order_Details");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Order_satisfaction", b =>
                {
                    b.Property<int>("IdSatisfaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Valorization")
                        .HasColumnType("int");

                    b.HasKey("IdSatisfaction");

                    b.ToTable("Order_satisfactions");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Order_status", b =>
                {
                    b.Property<int>("IdStatusOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.HasKey("IdStatusOrder");

                    b.ToTable("Order_status");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.ProvidersAttention", b =>
                {
                    b.Property<int>("IdProviderAttention")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IStatus")
                        .HasColumnType("int");

                    b.Property<string>("TypeAttention")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdProviderAttention");

                    b.ToTable("ProvidersAttentions");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.QuotesDetail", b =>
                {
                    b.Property<int>("IdQuoteDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("IStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("IdQuoteDetail");

                    b.ToTable("QuotesDetails");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.QuotesHeader", b =>
                {
                    b.Property<int>("IdQuoteHeader")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AssigmentDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerObservation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IStatus")
                        .HasColumnType("int");

                    b.Property<int>("IStatusCreationDate")
                        .HasColumnType("int");

                    b.Property<int>("IdCate")
                        .HasColumnType("int");

                    b.Property<int>("IdClientAddres")
                        .HasColumnType("int");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdProvider")
                        .HasColumnType("int");

                    b.Property<int>("IdQuoteDetail")
                        .HasColumnType("int");

                    b.Property<int>("IdSubcategory")
                        .HasColumnType("int");

                    b.Property<string>("ProviderObservation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdQuoteHeader");

                    b.ToTable("QuotesHeaders");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.ServicesStatus", b =>
                {
                    b.Property<int>("IdServicesStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdServicesStatus");

                    b.ToTable("ServicesStatuss");
                });

            modelBuilder.Entity("FindServiceHn.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
